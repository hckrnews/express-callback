{"version":3,"file":"express-callback.umd.js","sources":["../src/error-status.js","../src/status-codes.js","../src/response.js","../src/express-callback.js"],"sourcesContent":["const errorCodesStatus = [\n    {\n        type: TypeError,\n        status: 422,\n    },\n    {\n        type: RangeError,\n        status: 404,\n    },\n    {\n        type: Error,\n        status: 500,\n    },\n];\n\n/**\n * Get a http status when you send an error.\n * When it is a error, throw back the error.\n *\n * @param {Error} error\n *\n * @return {number}\n */\nexport default (error) =>\n    errorCodesStatus.find((errorCode) => error instanceof errorCode.type)\n        .status;\n","import http from 'http';\n\nexport const statusCodes = Object.keys(http.STATUS_CODES).map(Number);\n\nexport function isValid(statusCode) {\n    return statusCodes.includes(statusCode);\n}\n","import { isValid as isValidStatusCode, statusCodes } from './status-codes';\n\n/**\n * Build a valid reponse message.\n *\n * @param {number} statusCode, {object} headers, {object|array} body\n * @param {object} specification\n *\n * @return {object}\n */\nexport default function buildJsonResponse(\n    { statusCode = 200, headers = {}, body = null },\n    specification = {}\n) {\n    if (statusCode?.constructor !== Number || !isValidStatusCode(statusCode)) {\n        throw new Error('statusCode must have a valid http status code');\n    }\n\n    if (headers?.constructor !== Object) {\n        throw new Error('headers must have a valid object');\n    }\n\n    if (body && body?.constructor !== Object && body?.constructor !== Array) {\n        throw new Error('body must have a valid object');\n    }\n\n    if (specification?.constructor !== Object) {\n        throw new Error('specification must have a valid object');\n    }\n\n    const defaultBody = {\n        status: true,\n        version: specification?.info?.version ?? 'unknown',\n        timestamp: new Date(),\n        message: 'ok',\n    };\n\n    return {\n        headers: {\n            'Content-Type': 'application/json',\n            'Cache-Control': 'no-store, max-age=0',\n            ...headers,\n        },\n        statusCode,\n        body: body ?? defaultBody,\n    };\n}\n\nexport { buildJsonResponse, statusCodes, isValidStatusCode };\n","import getStatusByError from './error-status';\nimport { buildJsonResponse, statusCodes, isValidStatusCode } from './response';\n\nexport default function makeExpressCallback({\n    controller,\n    specification,\n    logger,\n    meta,\n}) {\n    return async (context, req, res) => {\n        try {\n            const response = await controller({\n                context,\n                specification,\n                logger,\n                req,\n                res,\n                meta,\n            });\n            const httpResponse = buildJsonResponse(response, specification);\n\n            if (httpResponse.headers) {\n                res.set(httpResponse.headers);\n            }\n\n            res.type('json');\n            res.status(httpResponse.statusCode).send(httpResponse.body);\n        } catch (error) {\n            const errorCodeStatus = getStatusByError(error);\n\n            if (errorCodeStatus >= 500) {\n                logger.error(error.message);\n            }\n\n            res.status(errorCodeStatus).send({\n                status: errorCodeStatus,\n                timestamp: new Date(),\n                message: error.message,\n            });\n        }\n    };\n}\n\nexport {\n    makeExpressCallback,\n    getStatusByError,\n    buildJsonResponse,\n    statusCodes,\n    isValidStatusCode,\n};\n"],"names":["errorCodesStatus","type","TypeError","status","RangeError","Error","error","find","errorCode","statusCodes","Object","keys","http","STATUS_CODES","map","Number","isValid","statusCode","includes","buildJsonResponse","headers","body","specification","constructor","isValidStatusCode","Array","defaultBody","version","info","timestamp","Date","message","makeExpressCallback","controller","logger","meta","context","req","res","response","httpResponse","set","send","errorCodeStatus","getStatusByError"],"mappings":"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"}